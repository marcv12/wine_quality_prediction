"0",""
"0","# cost as a function of threshold"
"0","wine.probs <- predict(glm_mod, data.frame(test.x), type = ""response"")"
"0",""
"0","cost = rep(0,length(thresh))"
"0",""
"0","for (i in 1:length(thresh)){"
"0","  "
"0","  glm.pred = rep(""0"", length(wine.probs))"
"0","  glm.pred[wine.probs > thresh[i]] = ""1"""
"0","  glm.pred <- as.factor(glm.pred)"
"0","  x <- confusionMatrix(glm.pred, test.y, positive = ""1"")"
"0","  TN <- x$table[1]"
"0","  FP <- x$table[2]"
"0","  FN <- x$table[3]"
"0","  TP <- x$table[4]"
"0","  cost[i] = 25*FN + TP * (-40) + 10 * FP + TN *(-40)"
"0","}"
"2","Warning in confusionMatrix.default(glm.pred, test.y, positive = ""1"") :"
"2","
 "
"2"," Levels are not in the same order for reference and data. Refactoring data to match.
"
"0","#for the simple model, take treshold as 0.5"
"0","glm.pred = rep(""0"", length(glm.pred))"
"0","glm.pred[wine.probs > 0.5] = ""1"""
"0","glm.pred <- as.factor(glm.pred)"
"0",""
"0","x <- confusionMatrix(glm.pred, test.y, positive = ""1"")"
"0","TN <- x$table[1]"
"0","FP <- x$table[2]"
"0","FN <- x$table[3]"
"0","TP <- x$table[4]"
"0","cost_simple = 25*FN + TP * (-40) + 10 * FP + TN *(-40)"
"0",""
"0",""
"0",""
"0","# putting results in a dataframe for plotting"
"0","dat <- data.frame("
"0","  model = c(rep(""optimized"",10),""simple""),"
"0","  cost_per_customer = c(cost,cost_simple),"
"0","  threshold = c(thresh,0.5)"
"0",")"
"0",""
"0",""
"0",""
"0","# plotting"
"0","plot2 <- ggplot(dat, aes(x = threshold, y = cost_per_customer, group = model, colour = model)) +"
"0","  geom_line() +"
"0","  geom_point()"
